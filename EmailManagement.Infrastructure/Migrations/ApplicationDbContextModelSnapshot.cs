// <auto-generated />
using System;
using EmailManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmailManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmailManagement.Domain.Models.Email.Atachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("EmailId")
                        .HasColumnType("uuid")
                        .HasColumnName("email_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_extension");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.HasKey("Id")
                        .HasName("pk_atachment");

                    b.HasIndex("EmailId")
                        .HasDatabaseName("ix_atachment_email_id");

                    b.ToTable("atachment", (string)null);
                });

            modelBuilder.Entity("EmailManagement.Domain.Models.Email.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Attempts")
                        .HasColumnType("integer")
                        .HasColumnName("attempts");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body");

                    b.Property<DateTime?>("LastAttemptAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_attempt_at");

                    b.Property<string>("Recipients")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("recipients");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sender");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sent_at");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.HasKey("Id")
                        .HasName("pk_email");

                    b.HasIndex("Recipients")
                        .HasDatabaseName("ix_email_recipients");

                    b.HasIndex("Sender")
                        .HasDatabaseName("ix_email_sender");

                    b.HasIndex("SentAt")
                        .HasDatabaseName("ix_email_sent_at");

                    b.ToTable("email", (string)null);
                });

            modelBuilder.Entity("EmailManagement.Domain.Models.Email.Atachment", b =>
                {
                    b.HasOne("EmailManagement.Domain.Models.Email.Email", null)
                        .WithMany("Atachments")
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_atachment_emails_email_id");
                });

            modelBuilder.Entity("EmailManagement.Domain.Models.Email.Email", b =>
                {
                    b.Navigation("Atachments");
                });
#pragma warning restore 612, 618
        }
    }
}
